import Form from "./components/Form";
import useLocalStorageState from "use-local-storage-state";
import { useEffect, useState } from "react";
import { uid } from "uid";
import List from "./components/List";

// This component renders the whole app.
function App() {
  // This variable is the state activities. It can be modified with setActivities. The default value of the state is an empty array.
  // We call the useLocalStorageState hook to create the state activity.
  const [activities, setActivities] = useLocalStorageState("activities", {
    defaultValue: [],
  });
  // This is the state weather.
  // We call the useState hook with a default value of an empty array.
  const [weather, setWeather] = useState([]);
  // This is the filter for good/bad weather activities.
  // We declare the variable filteredActivities, next we execute filter method on our activities state.
  // The filter makes sure that filteredActivities only creates activities that equal the current state of weather.
  const filteredActivities = activities.filter((activity) => {
    return activity.goodweatheractivity === weather.isGoodWeather;
  });

  // This function will be called by the Form component as soon as a new activity is submitted.
  // The function adds a new entry to the array.
  // Also an id generated by uid will be added to the submitted activity.
  function handleAddActivity(data) {
    data.id = uid();
    setActivities([...activities, data]);
    //Todo: Rename data!!!!!!!!!
  }

  // This function will be called by the Delete Button component as soon as you click on the delete button.
  // The function then modifies the state activities by filtering only those activities that don't match the id of the button that was clicked on.
  function handleDeleteActivity({ id }) {
    setActivities(
      activities.filter((activity) => {
        return activity.id !== id;
      })
    );
  }

  // We need useEffect to use as a async function in JSX for fetching the data from the weather API (only a side-effect ;))
  useEffect(() => {
    async function loadWeather() {
      const response = await fetch(
        "https://example-apis.vercel.app/api/weather/rainforest"
      );
      const data = await response.json();
      setWeather(data);
    }

    loadWeather();
  }, []);
  //The return statement renders the whole content of the app by calling other components.
  return (
    <>
      <h1>
        {weather.condition} {weather.temperature}Â° C
      </h1>
      <div className="App">
        <List
          activities={filteredActivities}
          isGoodWeather={weather.isGoodWeather}
          onDeleteActivity={handleDeleteActivity}
        />
        <Form onAddActivity={handleAddActivity}></Form>
      </div>
    </>
  );
}

export default App;
